@Library("shared-library") _

pipeline {
    agent any
    environment {
        MY_TOKEN = credentials('my-token')
    }
    options {
        buildDiscarder(
            logRotator(
                daysToKeepStr: '60'
            )
        )
        disableConcurrentBuilds()
        timeout(
            time: 1,
            unit: 'HOURS'
        )
    }

    stages {
        stage('Set Params') {
            // input {
            //     message "Who are you?"
            //     ok "ENTER"
            //     parameters {
            //         string(
            //             name: 'USERNAME'
            //         )
            //     }
            // }

            // input {
            //     message "Please select type of release"
            //     ok "Build"
            //     parameters {
            //         choice(
            //             name: 'RELEASE_OPTIONS', 
            //             choices: ['HOTFIX', 'PATCH', 'MINOR', 'MAJOR'], 
            //             description: 'select the release type'
            //         )
            //     }
            // }

            steps {
                input(
                    message: 'Build Core Image?',
                    ok: 'Yes', 
                    parameters: [
                        booleanParam(defaultValue: true, description: 'Push the button to build core image.',name: 'Yes?')
                    ]
                )
                sh "echo you are ${Yes?}!"
            }
        }

        stage("Loading Shared Library") {
            steps {
                helloWorld('dude')
                howdy(name: 'partner', dayOfWeek: 'Tuesday')
                checkPlease()
            }
        }

        stage("Check location") {
            steps {
                input(message: 'Do you wish to proceed?', ok: 'Proceed')
                sh 'pwd'
            }
        }

        stage("Check Items") {
            steps {
                sh 'ls -ahl'
            }
        }

        stage("Building new version") {
            steps {
                echo "Building version: ${params.VERSION}"
                echo "log level:  ${params.LOGGING_LEVEL}"
            }
        }
    }
}
